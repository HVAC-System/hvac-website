---
description: 
globs: 
alwaysApply: true
---
# Project Structure & File Organization

## Directory Layout
- All pages must be in the `/app` directory (Next.js App Router)
- Place reusable UI components in `/components`
# Project Structure & File Organization

## Directory Layout
- Place all route files in `/app` (Next.js App Router).
- Place reusable UI components in `/components`.
- Store helper functions, API clients, and server-only modules in `/lib`.
- Place global stylesheets in `/styles`.
- Store static assets (images, icons, etc.) in `/public`.
- Place TypeScript type definitions in `/types`.
- Store API route handlers in `/app/api`.
- Place test files in `__tests__` directories or alongside components as `.test.tsx`/`.test.ts`.
- Place configuration files (e.g., `next.config.js`, `tailwind.config.js`, `.env*`) at the project root.
- Store translation files in `/public/locales/`.

## Naming Conventions
- Use **kebab-case** for directory and file names (e.g., `user-profile.tsx`).
- Use **PascalCase** for React component files and exported component names.
- Use **camelCase** for variables, functions, and hooks.
- Use **UPPERCASE** for constants and environment variables.

## File Extensions
- Use `.tsx` for React components and pages.
- Use `.ts` for utilities, types, and server logic.
- Use `.css`, `.scss`, or `.module.css` for styles.

## Example Structure
```text
/app
  /page.tsx
  /layout.tsx
  /api
    /example/route.ts
/components
  /Button.tsx
  /Header.tsx
/lib
  /fetchData.ts
/styles
  /globals.css
/types
  /user.ts
/public
  /logo.png
/public/locales/
  /en/common.json
  /fr/common.json
next.config.js
tailwind.config.js
.env
``` 